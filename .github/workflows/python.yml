name: Python CI

on:
  workflow_call:
    inputs:
      module-name:
        required: true
        type: string
      root-path:
        required: true
        type: string

env:
  PYTHON_SRC: "src"

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.10"]
    environment:
      name: release
      url: https://pypi.org/p/${{ inputs.module-name }}
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
      - uses: actions/checkout@v4
        with:
          repository: Cosmian/cosmian_enclave
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package with dependencies
        working-directory: ${{ inputs.root-path }}/${{ inputs.module-name }}
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install ".[dev]"

      - name: Package metadata
        working-directory: ${{ inputs.root-path }}/${{ inputs.module-name }}
        id: metadata
        run: |
          echo "PACKAGE_VERSION=$(python -c 'import ${{ inputs.module-name }}; print(${{ inputs.module-name }}.__version__)')" >> $GITHUB_OUTPUT

      - name: Code format with black
        working-directory: ${{ inputs.root-path }}/${{ inputs.module-name }}
        run: |
          python -m black --check $PYTHON_SRC

      - name: Import check with isort
        working-directory: ${{ inputs.root-path }}/${{ inputs.module-name }}
        run: |
          python -m isort --check $PYTHON_SRC

      - name: Lint check with pylint
        working-directory: ${{ inputs.root-path }}/${{ inputs.module-name }}
        run: |
          python -m pylint $PYTHON_SRC

      - name: Lint check with pycodestyle
        working-directory: ${{ inputs.root-path }}/${{ inputs.module-name }}
        run: |
          python -m pycodestyle $PYTHON_SRC

      - name: Lint check with pydocstyle
        working-directory: ${{ inputs.root-path }}/${{ inputs.module-name }}
        run: |
          python -m pydocstyle $PYTHON_SRC

      - name: Typecheck with MyPy
        working-directory: ${{ inputs.root-path }}/${{ inputs.module-name }}
        run: |
          python -m mypy $PYTHON_SRC

      - name: Test with pytest
        working-directory: ${{ inputs.root-path }}/${{ inputs.module-name }}
        run: |
          python -m pytest -m "not sgx"

      - name: Build package
        working-directory: ${{ inputs.root-path }}/${{ inputs.module-name }}
        if: ${{ startsWith(github.ref, 'refs/tags') && endsWith(github.ref, steps.metadata.outputs.PACKAGE_VERSION) }}
        run: |
          python -m build

      - name: Publish package to PyPi
        if: ${{ startsWith(github.ref, 'refs/tags') && endsWith(github.ref, steps.metadata.outputs.PACKAGE_VERSION) }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: ${{ inputs.root-path }}/${{ inputs.module-name }}/dist
          attestations: false
